package io.proffitt.coherence.settings;

import java.util.HashMap;

public class Keys {
	private static HashMap<String, Integer>	mapping	= null;	;
	private static void init() {
		mapping = new HashMap<String, Integer>();
		mapping.put("KEY_SPACE", new Integer(0x20));
		mapping.put("KEY_APOSTROPHE", new Integer(0x27));
		mapping.put("KEY_COMMA", new Integer(0x2C));
		mapping.put("KEY_MINUS", new Integer(0x2D));
		mapping.put("KEY_PERIOD", new Integer(0x2E));
		mapping.put("KEY_SLASH", new Integer(0x2F));
		mapping.put("KEY_0", new Integer(0x30));
		mapping.put("KEY_1", new Integer(0x31));
		mapping.put("KEY_2", new Integer(0x32));
		mapping.put("KEY_3", new Integer(0x33));
		mapping.put("KEY_4", new Integer(0x34));
		mapping.put("KEY_5", new Integer(0x35));
		mapping.put("KEY_6", new Integer(0x36));
		mapping.put("KEY_7", new Integer(0x37));
		mapping.put("KEY_8", new Integer(0x38));
		mapping.put("KEY_9", new Integer(0x39));
		mapping.put("KEY_SEMICOLON", new Integer(0x3B));
		mapping.put("KEY_EQUAL", new Integer(0x3D));
		mapping.put("KEY_A", new Integer(0x41));
		mapping.put("KEY_B", new Integer(0x42));
		mapping.put("KEY_C", new Integer(0x43));
		mapping.put("KEY_D", new Integer(0x44));
		mapping.put("KEY_E", new Integer(0x45));
		mapping.put("KEY_F", new Integer(0x46));
		mapping.put("KEY_G", new Integer(0x47));
		mapping.put("KEY_H", new Integer(0x48));
		mapping.put("KEY_I", new Integer(0x49));
		mapping.put("KEY_J", new Integer(0x4A));
		mapping.put("KEY_K", new Integer(0x4B));
		mapping.put("KEY_L", new Integer(0x4C));
		mapping.put("KEY_M", new Integer(0x4D));
		mapping.put("KEY_N", new Integer(0x4E));
		mapping.put("KEY_O", new Integer(0x4F));
		mapping.put("KEY_P", new Integer(0x50));
		mapping.put("KEY_Q", new Integer(0x51));
		mapping.put("KEY_R", new Integer(0x52));
		mapping.put("KEY_S", new Integer(0x53));
		mapping.put("KEY_T", new Integer(0x54));
		mapping.put("KEY_U", new Integer(0x55));
		mapping.put("KEY_V", new Integer(0x56));
		mapping.put("KEY_W", new Integer(0x57));
		mapping.put("KEY_X", new Integer(0x58));
		mapping.put("KEY_Y", new Integer(0x59));
		mapping.put("KEY_Z", new Integer(0x5A));
		mapping.put("KEY_LEFT_BRACKET", new Integer(0x5B));
		mapping.put("KEY_BACKSLASH", new Integer(0x5C));
		mapping.put("KEY_RIGHT_BRACKET", new Integer(0x5D));
		mapping.put("KEY_GRAVE_ACCENT", new Integer(0x60));
		mapping.put("KEY_WORLD_1", new Integer(0xA1));
		mapping.put("KEY_WORLD_2", new Integer(0xA2));
		mapping.put("KEY_ESCAPE", new Integer(0x100));
		mapping.put("KEY_ENTER", new Integer(0x101));
		mapping.put("KEY_TAB", new Integer(0x102));
		mapping.put("KEY_BACKSPACE", new Integer(0x103));
		mapping.put("KEY_INSERT", new Integer(0x104));
		mapping.put("KEY_DELETE", new Integer(0x105));
		mapping.put("KEY_RIGHT", new Integer(0x106));
		mapping.put("KEY_LEFT", new Integer(0x107));
		mapping.put("KEY_DOWN", new Integer(0x108));
		mapping.put("KEY_UP", new Integer(0x109));
		mapping.put("KEY_PAGE_UP", new Integer(0x10A));
		mapping.put("KEY_PAGE_DOWN", new Integer(0x10B));
		mapping.put("KEY_HOME", new Integer(0x10C));
		mapping.put("KEY_END", new Integer(0x10D));
		mapping.put("KEY_CAPS_LOCK", new Integer(0x118));
		mapping.put("KEY_SCROLL_LOCK", new Integer(0x119));
		mapping.put("KEY_NUM_LOCK", new Integer(0x11A));
		mapping.put("KEY_PRINT_SCREEN", new Integer(0x11B));
		mapping.put("KEY_PAUSE", new Integer(0x11C));
		mapping.put("KEY_F1", new Integer(0x122));
		mapping.put("KEY_F2", new Integer(0x123));
		mapping.put("KEY_F3", new Integer(0x124));
		mapping.put("KEY_F4", new Integer(0x125));
		mapping.put("KEY_F5", new Integer(0x126));
		mapping.put("KEY_F6", new Integer(0x127));
		mapping.put("KEY_F7", new Integer(0x128));
		mapping.put("KEY_F8", new Integer(0x129));
		mapping.put("KEY_F9", new Integer(0x12A));
		mapping.put("KEY_F10", new Integer(0x12B));
		mapping.put("KEY_F11", new Integer(0x12C));
		mapping.put("KEY_F12", new Integer(0x12D));
		mapping.put("KEY_F13", new Integer(0x12E));
		mapping.put("KEY_F14", new Integer(0x12F));
		mapping.put("KEY_F15", new Integer(0x130));
		mapping.put("KEY_F16", new Integer(0x131));
		mapping.put("KEY_F17", new Integer(0x132));
		mapping.put("KEY_F18", new Integer(0x133));
		mapping.put("KEY_F19", new Integer(0x134));
		mapping.put("KEY_F20", new Integer(0x135));
		mapping.put("KEY_F21", new Integer(0x136));
		mapping.put("KEY_F22", new Integer(0x137));
		mapping.put("KEY_F23", new Integer(0x138));
		mapping.put("KEY_F24", new Integer(0x139));
		mapping.put("KEY_F25", new Integer(0x13A));
		mapping.put("KEY_KP_0", new Integer(0x140));
		mapping.put("KEY_KP_1", new Integer(0x141));
		mapping.put("KEY_KP_2", new Integer(0x142));
		mapping.put("KEY_KP_3", new Integer(0x143));
		mapping.put("KEY_KP_4", new Integer(0x144));
		mapping.put("KEY_KP_5", new Integer(0x145));
		mapping.put("KEY_KP_6", new Integer(0x146));
		mapping.put("KEY_KP_7", new Integer(0x147));
		mapping.put("KEY_KP_8", new Integer(0x148));
		mapping.put("KEY_KP_9", new Integer(0x149));
		mapping.put("KEY_KP_DECIMAL", new Integer(0x14A));
		mapping.put("KEY_KP_DIVIDE", new Integer(0x14B));
		mapping.put("KEY_KP_MULTIPLY", new Integer(0x14C));
		mapping.put("KEY_KP_SUBTRACT", new Integer(0x14D));
		mapping.put("KEY_KP_ADD", new Integer(0x14E));
		mapping.put("KEY_KP_ENTER", new Integer(0x14F));
		mapping.put("KEY_KP_EQUAL", new Integer(0x150));
		mapping.put("KEY_LEFT_SHIFT", new Integer(0x154));
		mapping.put("KEY_LEFT_CONTROL", new Integer(0x155));
		mapping.put("KEY_LEFT_ALT", new Integer(0x156));
		mapping.put("KEY_LEFT_SUPER", new Integer(0x157));
		mapping.put("KEY_RIGHT_SHIFT", new Integer(0x158));
		mapping.put("KEY_RIGHT_CONTROL", new Integer(0x159));
		mapping.put("KEY_RIGHT_ALT", new Integer(0x15A));
		mapping.put("KEY_RIGHT_SUPER", new Integer(0x15B));
		mapping.put("KEY_MENU", new Integer(0x15C));
	}
	public static int getKey(String name) {
		if (mapping == null) {
			init();
		}
		return mapping.get(name) == null ? -1 : mapping.get(name);
	}
}
